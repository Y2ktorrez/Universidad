
v= [7,4,5,8,6,9,3]

Los Vectores se usa para cargar una buena candidad de datos.

/*Constante max*/ = Establecemos el tamaÃ±o maximo del vector max=100

****Variables****

/*n*/ = Cantidad de datos en el Vector Ej:(n=7)
        Cantidad de datos a procesar 

/*a*/ = Posicion Inicial

/*b*/ = Posicion Final     //De donde hacia donde.

De los tres datos solo se nesecita dos, el tercero es calculable (n,a,b)

  |---------------| n=7
v= [7,4,5,8,6,9,3]   //se comienza contando desde la izquierda comenzando con 0  
     |---------| n=5

Formula para calcular el tercero(Cualquiera de las tres variables) /*** n = b - a + 1; ***/

****4 formas de parametros***** 
Tomar en cuenta.

1. Parametro n (Cantidad de elementos en el vector) se asume que /*a = 0*/
   Por lo tanto la variable calculada es /*b = n - 1;*/

2. Parametro a y b (Posicion inicial y posicion Final) Por lo tanto la variable calculada
   es /*n = b - a + 1*/

3. Parametro a y n (Posicion Inicial y cantidad de datos a procesar) /*b = a + n - 1*/

4. Parametro b y n (Posicion Final y cantidad de datos a procesar) /*a = b - n + 1*/

Si tomamos en cuenta estos parametros (4 formas), hay 28 posibles solucines (4x7=28)

EJEMPLO
ALGORITMO CON VECTORES
Funcion que devuelva la suma de los elementos de un vector
Ej: V[7, 3, 8, 2, 5] --> 25

Paso 0 
       E: v(vector), n(cantidad de elemetos)
       S: s(Un numero entero)

Paso 1
       VR = n(Cantidad de elementos)

Paso 2
       Dn = byte U N
          = [0,255] U [0,Infinito[
          = [0,255]

Paso 3
       n = 0
       s = 0

Paso 4
       k = n -1 (Menos el Ultimo)
      |----------------| n=5 
       V[7, 3, 8, 2, 5] --> V[7, 3, 8, 2] Hipotesis => s=20 
                            Pero me falta s = 20 + 5 --> 25

****Otro tipo de Parametro para Resolver****
//Parametro 2

Paso 0
      E: v,a,b(Vector, Pos Inicial, Pos Final)
      S: s(un numero entero)

Paso 1
      VR = n(Cant. de Datos a sumar)
             n = b - a + 1

Paso 2       
      Dn = byte U N
          = [0,255] U [0,Infinito[
          = [0,255]

Paso 3
      n = 0
      s = 0

Paso 4 
      k = n-1, menos el primero
     a|--|        b|--| 
      V[7, 3, 8, 2, 5]


***13-04-23***
El vector si o si tiene que ser redimencionado
Busqueda Binaria (Posicion)

v[4, 7, 8, 10, 15, 17, 20, 21, 22] --> x = 7

Paso 0
      E: v,x,a,b (vector, dato, pos Inicial, pos Final)
      S: p(numero entero)

Paso 1 
      VR = n (Cant de datos en los que buscas)

Paso 2
      Dn = byte U N
          = [0,255] U [0,Infinito[
          = [0,255]

Paso 3 
      n = 0  | n = 1    -->v=>p=a
      p = 1  | x = v[a] -->F=>p=-1


Algoritmo de Ordenamiento
 SELECTION SORT

v[7, 3, 4, 8, 6, 2, 5]

Paso 0
      E: v,n (vector, cantidad de elementos)
      S: v

Paso 1
      VR=n

Paso 2
      Dn = byte U N
          = [0,255] U [0,Infinito[
          = [0,255]

Paso 3
             n=0 |  n=1
(nose hace nada) |(nada)

/*Funcion que devuelva la posicion Mayor*/

v[7, 3, 4, 8, 6, 2], n=6

Paso 0
      E: v,n (vector, cantidad de elementos)
      S: p (Un numero donde te muestre la posicion del mayor)

Paso 1
      VR=n

Paso 2
      Dn = byte U N
          = [0,255] U [1,Infinito[
          = [1,255]

Paso 3
      n=1
      p=0




