//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "MainCode.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TMyForm *MyForm;
//---------------------------------------------------------------------------
__fastcall TMyForm::TMyForm(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------

void EliminarPares( Cardinal &n ) {
  if ( n < 10 ) {
    if ( n % 2 == 0 )
      n = 0;
  }
  else {
	byte d;
	d = n % 10;
	n=n / 10;
	EliminarPares( n );
	if ( d % 2 == 1 )
	  n = n * 10 + d;
  }
}

void __fastcall TMyForm::Ejercicio11Click(TObject *Sender)
{
Cardinal a=StrToInt(txtEntrada->Text);


EliminarPares(a);

txtSalida->Text=a;

}
//---------------------------------------------------------------------------

void ElimPar(Cardinal &n){

	if (n>0){
	int d=n % 10;
	n=n/10;
	ElimPar(n);
		if ((d%2)==1) {
		n=n*10+d;
		}
	}

}


void Hola(){

MyForm->txtEntrada->Text="Hola mundo";
}


void __fastcall TMyForm::Ejercicio21Click(TObject *Sender)
{
Cardinal a=StrToInt(txtEntrada->Text);
ElimPar(a);
txtSalida->Text=a;
}
//---------------------------------------------------------------------------
void __fastcall TMyForm::Delete1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
cad.Delete(6,4);
txtSalida->Text=cad;
}
//---------------------------------------------------------------------------
void __fastcall TMyForm::Pos1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
int P=cad.Pos('z');
txtSalida->Text=P;
}
//---------------------------------------------------------------------------
void __fastcall TMyForm::LastDelimiter1Click(TObject *Sender)
{

String cad=txtEntrada->Text;
UnicodeString c=InputBox("CAJITA","Ingresa tu caracter","");
cad=cad.LastDelimiter(c);
//txtSalida->Text=cad;
ShowMessage(cad);
}
//---------------------------------------------------------------------------
void __fastcall TMyForm::rim2Click(TObject *Sender)
{
//String cad=txtEntrada->Text.Trim();       directa

String cad=txtEntrada->Text;
cad=cad.Trim();
txtSalida->Text=cad;
}
//---------------------------------------------------------------------------
void __fastcall TMyForm::SubString1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
int x=StrToInt(InputBox("INGRESE UN VALOR","Ingrese posicion inicial",""));
int y=StrToInt(InputBox("INGRESE UN VALOR","cantidad de caracteres a copiar",""));
String aux=cad.SubString(x,y);
txtSalida->Text=aux;
}
//---------------------------------------------------------------------------


void Printpal(String cad){
cad=cad.Trim();

int L=cad.Length();
	if (L>0) {
	int p=cad.LastDelimiter(' ');
	String UltPal=cad.SubString(p+1,L-p);
	cad.Delete(p+1,L-p);
	Printpal(cad);
	MyForm->Cajita->Items->Add(UltPal);
	}

}


void __fastcall TMyForm::Imprimirpalabrasdeunacadena1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
Printpal(cad);
}
//---------------------------------------------------------------------------



int IsDig(char c){
String cad="0123456789";
return cad.Pos(c);
}


void __fastcall TMyForm::Verificarsiuncaracterestaenunacadena1Click(TObject *Sender)

{
char c=txtEntrada->Text[1];
txtSalida->Text=IsDig(c);
//---------------------------------------------------------------------------
}
void consnum(String &cad){
int L=cad.Length();
	if (L>0) {
	char UC=cad[L];
	cad.Delete(L,1);
	consnum(cad);
		if (IsDig(UC)>0) {
		cad=cad+UC;
		}
	}
}

void __fastcall TMyForm::ConstruirNumero1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
consnum(cad);
txtSalida->Text=cad;
}
//---------------------------------------------------------------------------


bool EsConsonante(char c){
String consonantes="bcdfghjklmnpqrstvwxyz";
return consonantes.Pos(   LowerCase(c)    )>0;  //LowerCase trabajenlo dentro de POS.
}


int IsConsonante(char c){
String consonantes="bcdfghjklmnpqrstvwxyz";
return consonantes.Pos(   LowerCase(c)    );  //LowerCase trabajenlo dentro de POS.
}

void __fastcall TMyForm::Verificarsiesunaconsonante1Click(TObject *Sender)
{
char cad=txtEntrada->Text[1];
txtSalida->Text=BoolToStr(EsConsonante(cad),True);

}
//---------------------------------------------------------------------------


void SoloConsonantes(String &cad){
int L=cad.Length();
	if (L>0) {
	char UltCar=cad[L];
	cad.Delete(L,1);
	SoloConsonantes(cad);
		if (IsConsonante(UltCar)>0 ) {
		cad=cad+UltCar;
		}
	}
}
void __fastcall TMyForm::Dejarsoloconsonantes1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
SoloConsonantes(cad);
txtSalida->Text=cad;
}
//---------------------------------------------------------------------------



int ContPal(String cad){
int c;
cad=cad.Trim();
int L=cad.Length();
	if (L>0) {
	int p=cad.LastDelimiter(' ');

	String UltPal=cad.SubString(p+1,L-p);
	cad.Delete(p+1,L-p);
	c=ContPal(cad);
	int X=UltPal.Length();
		if (EsConsonante(UltPal[1]) && EsConsonante(UltPal[X]) )
			c=c+1;
	}

	else{
	c=0;
	}

return c;
}


void __fastcall TMyForm::Verificarcuantaspalabrascomienzanyterminanenu1Click(TObject *Sender)

{
String cad=txtEntrada->Text;
txtSalida->Text=ContPal(cad);
}
//---------------------------------------------------------------------------

void __fastcall TMyForm::SBVectorChange(TObject *Sender)
{
SGVector->ColCount=SBVector->Position;
lblColumnas->Caption=   (SGVector->ColCount);
}
//---------------------------------------------------------------------------

void __fastcall TMyForm::Jugandoconlasceldas1Click(TObject *Sender)
{
SGVector->Cells[0][0]="hola";

}
//---------------------------------------------------------------------------



void LoadVec(TStringGrid *vectorcito,String cad){
cad=cad.Trim();
int x;
int L=cad.Length();
	if (L>0) {
	int p=cad.LastDelimiter(' ');
	String ultpal=cad.SubString(p+1,L-p);
	cad.Delete(p+1,L-p);
	LoadVec(vectorcito,cad);
	x=vectorcito->ColCount;
	vectorcito->Cells[x-1][0]=ultpal;
	vectorcito->ColCount++;
	}
}

void __fastcall TMyForm::CargarPalabrasalVector1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
LoadVec(SGVector,cad);
SGVector->ColCount--;  //  SGVector->ColCount=SGVector->ColCount-1
}
//---------------------------------------------------------------------------



int Abecedario(char c){
String ABC="bcdfghjklmnpqrstvwxyzaeiou";
return ABC.Pos(   LowerCase(c)    );  //LowerCase trabajenlo dentro de POS.
}

void FormatCad(String &cad){
int L=cad.Length();
	if (L>0) {
	char UltCar=cad[L];
	cad.Delete(L,1);
	FormatCad(cad);
		if (Abecedario(UltCar)>0) {
		cad=cad+UltCar;
		}
		else{
		cad=cad+' ';
		}
	}
}

void __fastcall TMyForm::FormatoCadena1Click(TObject *Sender)
{
String cad=txtEntrada->Text;
FormatCad(cad);
txtSalida->Text=cad;
}
//---------------------------------------------------------------------------

void CargarPal(TStringGrid *V,String cad){
cad=cad.Trim();
int x;
int L=cad.Length();
	if (L>0) {
	int p=cad.LastDelimiter(' ');
	String ultpal=cad.SubString(p+1,L-p);
	cad.Delete(p+1,L-p);
	CargarPal(V,cad);
	x=V->ColCount;
	V->Cells[x-1][0]=ultpal;
	V->ColCount++;
	}
}

void __fastcall TMyForm::CargarPalabrasalvector21Click(TObject *Sender)
{
String cad=txtEntrada->Text;
FormatCad(cad);
CargarPal(SGVector,cad);
SGVector->ColCount--;
}
//---------------------------------------------------------------------------

