//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
// cargar una matrix ramdon
void llenarFila(TStringGrid *m,byte c,byte f){
if (c>0) {
	   llenarFila(m,c-1,f);
	   m->Cells[c-1][f-1]=Random(10);
}

}
void cargar(TStringGrid *m,byte c,byte f){
if (f>0) {
	   cargar(m,c,f-1);
	   llenarFila(m,c,f);
}
}
void __fastcall TForm2::cargarrnd1Click(TObject *Sender)
{
	StringGrid1->ColCount=StrToInt(Edit1->Text);
	StringGrid1->RowCount=StrToInt(Edit2->Text);
	cargar(StringGrid1,StringGrid1->ColCount,StringGrid1->RowCount);
}
//---------------------------------------------------------------------------
//cargar matriz de 1 en 1
// 1 8 9  16     0
// 2 7 10 15      1
// 3 6 11 14       2
// 4 5 12 13        3
void llenarcolumna(TStringGrid *m,byte c,byte f,byte k){
  if (f>0) {
			llenarcolumna(m,c,f-1,k-1);
			m->Cells[c-1][f-1]=k;
  }
}
void llenarcolumna2(TStringGrid *m,byte c,byte f,byte k){
	if (f>0) {
			llenarcolumna2(m,c,f-1,k+1);
			m->Cells[c-1][f-1]=k;
  }
}
void cargar1en1(TStringGrid *m,byte c,byte f){
  if (c>0) {
		  cargar1en1(m,c-1,f);
		  if (c%2==0) {
			llenarcolumna2(m,c,f,((f*c)-(f-1)) );
		  }else{
			llenarcolumna(m,c,f,f*c);
		  }

  }
}
void __fastcall TForm2::cargar11Click(TObject *Sender)
{
		StringGrid1->ColCount=StrToInt(Edit1->Text);
		StringGrid1->RowCount=StrToInt(Edit2->Text);
		cargar1en1(StringGrid1,StringGrid1->ColCount,StringGrid1->RowCount);
}
//---------------------------------------------------------------------------
//generar un triangulo
void llenarTRI(TStringGrid *m,byte c,byte f,byte i,byte k){
	if (k<=c){
		llenarTRI(m,c,f,i-1,k+1);
		m->Cells[k-1][f-1]= i;
	}
}
void ejer1(TStringGrid *m,byte c,byte f,byte i){
if (f>0) {
	   ejer1(m,c-1,f-1,i+(c-1));
	   llenarTRI(m,c,f,i,1);
}
}

void __fastcall TForm2::generartriangulo1Click(TObject *Sender)
{
		StringGrid1->ColCount=StrToInt(Edit1->Text);
		StringGrid1->RowCount=StrToInt(Edit2->Text);
		byte i=StringGrid1->ColCount;
		ejer1(StringGrid1,StringGrid1->ColCount,StringGrid1->RowCount,i);
}
//---------------------------------------------------------------------------
//limpiar matriz
void limiparcolumna(TStringGrid *m,byte c,byte f){
   if (f>0) {
		   limiparcolumna(m,c,f-1);
		   m->Cells[c-1][f-1]="";
   }
}
void limpiar(TStringGrid *m,byte c,byte f){
  if (c>0){
		   limpiar(m,c-1,f);
		   limiparcolumna(m,c,f);

  }
}
void __fastcall TForm2::Button1Click(TObject *Sender)
{ byte c=StringGrid1->ColCount;
  byte f=StringGrid1->RowCount;
	  limpiar(StringGrid1,c,f);
}
//---------------------------------------------------------------------------
//cargar matriz ejercicio 2 del practico
void llenarejer2(TStringGrid *m,byte c,byte f,byte i){
   if (f>=c) {
		  llenarejer2(m,c,f-1,i-1);
		  m->Cells[c-1][f-1]=i;
   }
}
void ejer2(TStringGrid *m,byte c,byte f,byte i,byte k){
  if (k<=c) {
	  ejer2(m,c,f,(i+(c-k)),k+1);
	  llenarejer2(m,k,f,i);
  }
}
void __fastcall TForm2::generartri21Click(TObject *Sender)
{
	 StringGrid1->ColCount=StrToInt(Edit1->Text);
	 StringGrid1->RowCount=StrToInt(Edit2->Text);
	 byte i=StringGrid1->ColCount;
	 ejer2(StringGrid1,StringGrid1->ColCount,StringGrid1->RowCount,i,1);

}
//---------------------------------------------------------------------------
//generar ejercicio 5
void llenar5(TStringGrid *m,byte c,byte g,byte f,byte &k,byte &p,byte &w){
if (g<=c){
	llenar5(m,c,g+1,f,k,p,w);
   if (p<w){
		k++;
		m->Cells[g-1][f-1]=k;
		p++;
   }else{
		m->Cells[g-1][f-1]=k;
   }
}

}
void ejer5(TStringGrid *m,byte c,byte f,byte k,byte d,byte p,byte w){
if (d<=f) {
	 ejer5(m,c,f,k,d+1,p,w-1);
	 llenar5(m,c,1,d,k,p,w);
}
}
void __fastcall TForm2::genrarejer51Click(TObject *Sender)
{
	 StringGrid1->ColCount=StrToInt(Edit1->Text);
	 StringGrid1->RowCount=StrToInt(Edit2->Text);
	 byte k=0;
	 byte w=StringGrid1->ColCount;
	 ejer5(StringGrid1,StringGrid1->ColCount,StringGrid1->RowCount,k,1,k,w);
}
//---------------------------------------------------------------------------
void llenarL(TStringGrid *m,byte f,byte d,byte n){
 if (n>0) {
	 llenarL(m,f,d,n-1);
	 m->Cells[n-1][f-1]=d;
	 m->Cells[f-1][n-1]=d;
 }
}
void ejer5ing(TStringGrid *m,byte c,byte f,byte d){
  if (f>0) {
		ejer5ing(m,c,f-1,d+1);
		llenarL(m,f,d,c);
  }
}
void __fastcall TForm2::generarejer6ing1Click(TObject *Sender)
{    StringGrid1->ColCount=StrToInt(Edit1->Text);
	 StringGrid1->RowCount=StrToInt(Edit2->Text);
	 ejer5ing(StringGrid1,StringGrid1->ColCount,StringGrid1->RowCount,1);

}
//---------------------------------------------------------------------------
void magico(TStringGrid *m,byte p,byte n,byte &c,byte &f){
if (n==1) {
	f=0;c=p/2;
	m->Cells[c][f]=n;
}else{
	  magico(m,p,n-1,c,f);
	  if ((n-1)%p==0)
		  f++;
	   else{
		  f--;
		  if (c==0)
			 c=p-1;
		  if (f==p)
			 f=0;
		  else
			c--;
	   }
	   m->Cells[c][f]=n;
}
}
void __fastcall TForm2::cuadradomagico1Click(TObject *Sender)
{   byte a,b,m=StrToInt(Edit1->Text);
	StringGrid1->ColCount=m;
	StringGrid1->RowCount=m;
	magico(StringGrid1,m,m*m,a,b);
}
//---------------------------------------------------------------------------

