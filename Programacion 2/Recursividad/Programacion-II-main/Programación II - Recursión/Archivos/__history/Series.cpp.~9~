// ---------------------------------------------------------------------------

#pragma hdrstop

#include "Series.h"
// ---------------------------------------------------------------------------
#pragma package(smart_init)

// Serie Fibonacci

Cardinal fibonacci(Word n) {
	Cardinal t;
	if (n < 2) {
		t = n;
	}
	else {
		t = fibonacci(n - 1) + fibonacci(n - 2);
	}
	return t;
}
// ---------------------------------------------------------------------------
/* Escribir una función que devuelva el n-ésimo término
 de la siguiente serie: 1, 2, 3, 6, 7, 14, 15, 30, 31, ... */

Cardinal serie1(Word n) {
	Cardinal t;
	if (n < 2) {
		t = n;
	}
	else {
		t = serie1(n - 1);
		if (n % 2 == 0) {
			t *= 2;
		}
		else {
			t++;
		}
	}
	return t;
}
// ---------------------------------------------------------------------------

Cardinal sumaSerie(Word n) {
	Cardinal s;
	if (n == 1) {
		s = 0;
	}
	else {
		s = sumaSerie(n - 1);
		s += 2*(n - 1);
	}
	return s;
}
// ---------------------------------------------------------------------------

Cardinal serie2(Word n) {
	Cardinal t;
	if (n < 2) {
		t = n;
	}
	else {
		t = serie2(n - 1) * 2 + 1;
	}
	return t;
	// return (int)pow(2, n)-1;
}
// ---------------------------------------------------------------------------
/* Escribir una función que devuelva la suma de los términos
 pares de la siguiente serie: 1, 2, 4, 5, 10, 13, 26, 28, 29, ... */

Cardinal sumaSerie2(Word n, Cardinal &s) {
	Cardinal t;
	if (n < 2) {
		t = n;
	}
	else {
		t = sumaSerie2(n - 1, s);
		if (n % 3 == 0) {
			t += 2;
		}
		else if (n % 3 == 1) {
			t++;
		}
		else {
			t *= 2;
		}

		if (t % 2 == 0) {
			s += t;
		}
	}
	return t;
}
// ----------------------------------------------------------------------------

/* Cardinal sumaSerie(Word n) {
 Cardinal s;
 if (n == 1) {
 s = 0;
 }
 else {
 s = sumaSerie(n - 1);
 s += 2*(n - 1);
 }
 return s;
 } */
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
