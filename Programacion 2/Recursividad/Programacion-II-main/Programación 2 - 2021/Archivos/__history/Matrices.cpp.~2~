//---------------------------------------------------------------------------

#pragma hdrstop

#include "Matrices.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

// Algoritmo que carga una matriz de m*n
/*
	 1  2  3  4
	 5  6  7  8
	 9 10 11 12
	13 14 15 16
*/

void LlenarFila(TStringGrid *A, byte m, byte, byte n, byte num) {
	if (n > 0) {
		LlenarFila(A, m - 1, n, num - 1);
		A->Cells[n - 1][m] = num;
	}
}

void CargarFilas(TStringGrid *A, byte m, byte n) {
	if (m > 0) {
		CargarFilas(A, m - 1, n);
		LlenarFila(A, m - 1, n, m * n);
    }
}
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
// ---------------------------------------------------------------------------
